(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{231:function(e,t,n){},236:function(e,t,n){"use strict";n(231)},238:function(e,t,n){"use strict";n(240),n(228);var a=n(226),r={name:"LiFaTable",data:function(){return{expendIds:[],scrollAirTh:!1}},props:{columns:{type:Array,required:!0},dataSource:{type:Array,required:!0},selectedItem:{type:Array,default:function(){return[]}},expendField:{type:String},striped:{type:Boolean,default:!1},numberVisible:{type:Boolean,default:!1},bordered:{type:Boolean,default:!1},compact:{type:Boolean,default:!1},orderBy:{type:Object,default:function(){return{}}},loading:{type:Boolean},height:{type:Number},checkable:{type:Boolean,default:!1}},mounted:function(){var e=this.$refs.table,t=e.cloneNode(),n=e.children[0].getBoundingClientRect().height;t.appendChild(e.children[0]),this.$refs.tableContent.style.height&&(this.scrollAirTh=!0),this.$refs.tableContent.style.marginTop=n+"px",this.$refs.wrapper.children[0].style.height=this.height-n+"px",t.classList.add("lifa-table-copy"),this.$refs.wrapper.appendChild(t),this.fixButtonCol()},computed:{areAllItemChecked:function(){var e=this.dataSource.map((function(e){return e.id})).sort(),t=this.selectedItem.map((function(e){return e.id})).sort(),n=!1;if(e.length===t.length)for(var a=0;a<e.length;a++){if(e[a]!==t[a]){n=!1;break}n=!0}return n},expendedCellColSpan:function(){var e=0;return this.checkable&&(e+=1),this.expendField&&(e+=1),e}},components:{LfIcon:a.a},methods:{fixButtonCol:function(){var e=this.$refs.slotWrapper;if(e){var t=e[0].getBoundingClientRect().width,n=e[0].parentNode,a=getComputedStyle(n),r=a.getPropertyValue("padding-left"),i=a.getPropertyValue("padding-right"),s=a.getPropertyValue("padding-top"),d=a.getPropertyValue("padding-bottom"),o=parseInt(t)+parseInt(r)+parseInt(i)+parseInt(s)+parseInt(d)+"px";this.$refs.actionsHeader.style.width=o,e.map((function(e){e.parentNode.style.width=o}))}},expendItem:function(e){this.expendIds.indexOf(e)>=0?this.expendIds.splice(this.expendIds.indexOf(e),1):this.expendIds.push(e)},expendVisible:function(e){return this.expendIds.indexOf(e)>=0},onChangeItem:function(e,t,n){var a=JSON.parse(JSON.stringify(this.selectedItem));n.target.checked?a.push(e):a=a.filter((function(t){return t.id!==e.id})),this.$emit("update:selectedItem",a)},onChangeItemAll:function(e){e.target.checked?this.$emit("update:selectedItem",this.dataSource):this.$emit("update:selectedItem",[])},onChecked:function(e){return this.selectedItem.filter((function(t){return t.id===e.id})).length>0},changeOrderBy:function(e){var t=JSON.parse(JSON.stringify(this.orderBy));"asc"===t[e]?t[e]="desc":"desc"===t[e]?t[e]=!0:t[e]="asc",this.$emit("update:orderBy",t)}},watch:{selectedItem:function(){this.selectedItem.length===this.dataSource.length?(this.$refs.a.indeterminate=!1,this.$refs.a.checked=!0):0===this.selectedItem.length?(this.$refs.a.indeterminate=!1,this.$refs.a.checked=!1):this.$refs.a.indeterminate=!0}}},i=(n(236),n(1)),s=Object(i.a)(r,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{ref:"wrapper",staticClass:"lifa-table-wrapper"},[n("div",{ref:"tableContent",class:{bottomBor:e.bordered},style:{height:e.height+"px",overflow:"auto"}},[n("table",{ref:"table",staticClass:"lifa-table",class:{bordered:e.bordered,compact:e.compact,striped:e.striped}},[n("thead",[n("tr",[e.expendField?n("th",{staticClass:"lifa-table-center",style:{width:"50px"}}):e._e(),e._v(" "),e.checkable?n("th",{staticClass:"lifa-table-center",style:{width:"50px"}},[n("input",{ref:"a",attrs:{type:"checkbox"},domProps:{checked:e.areAllItemChecked},on:{change:function(t){return e.onChangeItemAll(t)}}})]):e._e(),e._v(" "),e.numberVisible?n("th",{style:{width:"50px"}},[e._v("#")]):e._e(),e._v(" "),e._l(e.columns,(function(t){return n("th",{key:t.field,style:{width:t.width+"px"}},[n("div",{staticClass:"lifa-table-header"},[e._v("\n            "+e._s(t.text)+"\n            "),e._v(" "),t.field in e.orderBy?n("span",{staticClass:"lifa-table-sorter",on:{click:function(n){return e.changeOrderBy(t.field)}}},[n("lf-icon",{class:{active:"asc"===e.orderBy[t.field]},attrs:{name:"asc"}}),e._v(" "),n("lf-icon",{class:{active:"desc"===e.orderBy[t.field]},attrs:{name:"desc"}})],1):e._e()])])})),e._v(" "),e.$scopedSlots.default?n("th",{ref:"actionsHeader"}):e._e(),e._v(" "),e.scrollAirTh?n("th",{staticStyle:{width:"17px"}}):e._e()],2)]),e._v(" "),n("tbody",[e._l(e.dataSource,(function(t,a){return[n("tr",{key:t.id},[e.expendField?n("td",{staticClass:"lifa-table-center",class:{expend:e.expendVisible(t.id)},style:{width:"50px"},on:{click:function(n){return e.expendItem(t.id)}}},[n("lf-icon",{attrs:{name:"right"}})],1):e._e(),e._v(" "),e.checkable?n("td",{staticClass:"lifa-table-center",style:{width:"50px"}},[n("input",{staticClass:"checkbox",attrs:{type:"checkbox"},domProps:{checked:e.onChecked(t)},on:{change:function(n){return e.onChangeItem(t,a,n)}}})]):e._e(),e._v(" "),e.numberVisible?n("td",{style:{width:"50px"}},[e._v(e._s(a+1))]):e._e(),e._v(" "),e._l(e.columns,(function(a){return[n("td",{key:a.field,style:{width:a.width+"px"}},[e._v(e._s(t[a.field]))])]})),e._v(" "),e.$scopedSlots.default?n("td",[n("div",{ref:"slotWrapper",refInFor:!0,staticStyle:{display:"inline-block"}},[e._t("default",null,{item:t})],2)]):e._e()],2),e._v(" "),e.expendVisible(t.id)?n("tr",[n("td",{key:t.id+"-1",attrs:{colspan:e.columns.length+e.expendedCellColSpan}},[e._v("\n            "+e._s(t[e.expendField]||"空")+"\n          ")])]):e._e()]}))],2)])]),e._v(" "),e.loading?n("div",{staticClass:"lifa-table-loading"},[n("lf-icon",{attrs:{name:"loading"}})],1):e._e()])}),[],!1,null,"0c93394e",null);t.a=s.exports},323:function(e,t,n){},402:function(e,t,n){"use strict";n(323)},452:function(e,t,n){"use strict";n.r(t);n(240);var a=n(57),r=(n(22),n(238)),i=n(226),s=n(225),d={components:{"lf-icon":i.a,"lf-collaspe":s.default,LfTable:r.a},data:function(){return{content:"\n<lf-table :columns=\"columns\" :data-source=\"dataSource\" :order-by.sync=\"orderBy\"\n          @update:orderBy=\"changeOrder\" :loading=\"loading\">\n</lf-table>\n\n<script>\nexport default{\n    data(){\n        return {\n                    columns: [\n                      {text: '姓名', field: 'name'},\n                      {text: '分数', field: 'score'},\n                      {text: '年龄', field: 'age'}\n                    ],\n                    dataSource: [\n                      {id: 1, name: '发发', score: 100, age:18},\n                      {id: 2, name: '琳琳', score: 99, age: 16},\n                      {id: 3, name: '西西', score: 99, age: 20},\n                      {id: 4, name: '泳儿', score: 99, age: 21},\n                      {id: 5, name: '美美', score: 99, age: 22},\n                      {id: 6, name: '阿宇', score: 99, age: 26},\n                    ],\n                    selectedItem: [],\n                    orderBy: {\n                        name: true,\n                        score: 'desc'\n                    },\n                    key: '',\n                    loading: false\n        }\n    },\n    methods: {\n      changeOrder(data){\n                    this.loading = true\n                    this.$nextTick(()=>{\n                    setTimeout(()=>{\n                      let type\n                      let arr = this.dataSource.map(item=>{\n                          type = typeof item[this.key]\n                          return item[this.key]\n                      })\n                      if( data[this.key]=== 'asc'){\n                          if(type === 'number'){\n                              arr.sort((a,b)=>a-b)\n                          }else{\n                              arr.sort((a, b) => b.localeCompare(a, 'zh-Hans-CN', {sensitivity: 'accent'}))\n                          }\n                      }else if(data[this.key] === 'desc'){\n                          if(type === 'number'){\n                              arr.sort((a,b)=>b-a)\n                          }else{\n                              arr.sort((a, b) => a.localeCompare(b, 'zh-Hans-CN', {sensitivity: 'accent'}))\n                          }\n                      }\n                      arr.map((item,index)=>{\n                          this.dataSource[index][this.key]=item\n                      })\n                      this.loading = false\n                    },300)\n                 })\n      },\n    },\n    watch: {\n      orderBy(val,oldVal){\n                  for(let key in this.orderBy){\n                      if(val[key] !== oldVal[key]){\n                          this.key = key\n                      }\n                  }\n      }\n    },\n}\n<script>\n ".replace(/^ {10}/gm,"").trim(),columns:[{text:"姓名",field:"name",width:200},{text:"分数",field:"score",width:200},{text:"年龄",field:"age"}],dataSource:[{id:1,name:"发发",score:100,age:18},{id:2,name:"琳琳",score:99,age:16},{id:3,name:"西西",score:99,age:20},{id:4,name:"泳儿",score:99,age:21},{id:5,name:"美美",score:99,age:22},{id:6,name:"阿宇",score:99,age:26}],orderBy:{name:!0,score:"desc"},key:"",loading:!1}},methods:{changeOrder:function(e){var t=this;this.loading=!0,this.$nextTick((function(){setTimeout((function(){var n,r=t.dataSource.map((function(e){return n=Object(a.a)(e[t.key]),e[t.key]}));"asc"===e[t.key]?"number"===n?r.sort((function(e,t){return e-t})):r.sort((function(e,t){return t.localeCompare(e,"zh-Hans-CN",{sensitivity:"accent"})})):"desc"===e[t.key]&&("number"===n?r.sort((function(e,t){return t-e})):r.sort((function(e,t){return e.localeCompare(t,"zh-Hans-CN",{sensitivity:"accent"})}))),r.map((function(e,n){t.dataSource[n][t.key]=e})),t.loading=!1}),300)}))}},watch:{orderBy:function(e,t){for(var n in this.orderBy)e[n]!==t[n]&&(this.key=n)}}},o=(n(402),n(1)),c=Object(o.a)(d,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticStyle:{"padding-top":"16px"}},[n("h2",[e._v("排序")]),e._v(" "),n("div",{staticClass:"demo-box"},[n("div",{staticClass:"top"},[n("lf-table",{attrs:{columns:e.columns,"data-source":e.dataSource,"order-by":e.orderBy,loading:e.loading},on:{"update:orderBy":[function(t){e.orderBy=t},e.changeOrder],"update:order-by":function(t){e.orderBy=t}}})],1),e._v(" "),n("lf-collaspe",[n("p",{attrs:{slot:"one"},slot:"one"},[e._v("开启排序，需要传入一个"),n("code",[e._v("orderBy")]),e._v("属性，它是一个"),n("code",[e._v("Object")]),e._v("类型，默认是一个空对象，我们可以通过"),n("code",[e._v("orderBy")]),e._v("来指定我们的排序规则（true: 开启排序；'desc': 降序；'asc': 升序），然后通过动态"),n("code",[e._v(".sync")]),e._v("动态监听"),n("code",[e._v("update:orderBy")]),e._v("事件，来更新"),n("code",[e._v("orderBy")]),e._v("也就是"),n("code",[e._v(':order-by.sync="orderBy"')]),e._v("；这里需要注意排序的方法需要我们自己定义，只需在"),n("code",[e._v("changeOrder")]),e._v("方法中定义你的排序算法即可。")]),e._v(" "),n("code",{attrs:{slot:"two"},slot:"two"},[e._v(e._s(e.content))])])],1)])}),[],!1,null,"dfb53e00",null);t.default=c.exports}}]);